<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema 

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAA4QAAAOEBAMAAAALYOIIAAAABGdBTUEAALGPC/xhBQAAABJQTFRF5ubm
        AAAA////UlJSx8fHioqKUe6xUAAAILRJREFUeNrtnU17o7jShmlmZm/A3mMl2Y/p6X2Hd85+wkz//7/y
        RoAdPgSqEkhQ5qnrXMdzd2yh1B0JfQCOVBN51ARQHCId4hHpEI9Ih3hEOsQj0iEekQ7xiHSIR6RDPCId
        4hHpEI9Ih3hEOsQj0iEekQ7xeI+4/XegVEQ6xCPSIR6RDvGIdIhHpEM8Ih3iEekQj0iHeEQ6xCPSIR6R
        DvGIdIhHpEM8Ih2CsX3F3ptYRDrEI9IhHpEO8Yh0iEekQzwiHeIR6RCPSId4RDrEI9IhHpEO8Yh0iEek
        QzwiHeLxHth7k45Ih3hEOsQj0iEekQ7xiHSIR6RDPCId4hHpEI9Ih3hEOsQj0iEekQ7xiHSIR6RDMLav
        2HsTi0iHeEQ6xCPSIR6RDvGIdIhHpEM8Ih3iEekQj0iHeEQ6xCPSIR6RDvGIdIhHpEM83gN7b9IR6RCP
        SId4RDrEI9IhHpEO8Yh0iEekQzwiHeIR6RCPSId4RDrEI9IhHpEO8Yh0CMb2FXtvYtFD0SpuAmjHnSms
        qxX9/Pl3Gz+bAE5incD9KIzV669bgmBG9qPU+duBwlj9AX+Okf2j8u0Vxq8QuCCycnOF6rcEsSiKjRWq
        jwSxMM7bKoTBFeKypUIYXCUu2ymEwZXispXCbwlipThto/AlQawWxRYK8wSxYsQbKMSJcNW45C4K23Da
        qYrRja4chYOFRQrRja4ecWCF7wli5TiHVfiaIFaPKqhCjGU8xCWkwrcE4SGKgArRCL3EJZxC85kw+44g
        h3mfvAqmcDwczf5RCGYYLnc4B1M4Eli26wW4QpeFY4mhFF7HXfgzJ9onDvuzNJDCwd/OScGKMw4uPcrC
        KHwdG4QVZxx0aZVLUewDX4dnYAUrC7A/QUtzh6LYBx60/GMk2h8Ozks8he0rc7+wvzJTsj4LNGB/04d1
        WanbgeNvpnb//In2iL0zU8r5rKPC3t+MOk6iPWKvK+V81u3AvfFoAQ1rYO8KiJLxWbcDX3tjGWhYBW+j
        ntSjwt4YuICGdbDbDDm3WLgp7Hfb0LAOjk6GHhW+9ps8NKyD1+HJ0KPCa//PBRpWwuHJMIzCs4KG1bCz
        ZXGif9bpwLf+Xws0rISdAU1G/6zTgQenXWhYC50S63KkzmjmcsRE+8POZK1SPhVenc66QDteXc5QCxWW
        R0y0P3x1UtgGY5cr7jT3nPlZ4Dx2TlG5xy3f+NY7DvK+Ir73Woc/hZ3WfsxE+8NrGIWdDebimIn2h52r
        IUqPCvuHiZD3NbEzq/Co8GUwmkHeV8TeScqbwq/+OoPCtfEjsMIzFK6N7yEUdq5eS4+aaH/41T5OHlvh
        OxT6wy+Fn3Nub63wYzCnQN5XxLcgCm/dce8xE+0PX7tjxQAKy6Mm2h/m3RmbN4VfBzlsoj1iYIX5YRPt
        Dx0Utq+Mba2vg/A/C7Rg3M2uty1fKPSIUCgeoVA8QqF4hELxCIXiEQrFIxSKRygUj1AoHqFQPEKheIRC
        8QiF4tFFYRvYL9wJdrOLLV+RCIUKCu0IhVAIVFD4zAiFCgrtCIVQCFRQ+MwIhQoK7QiFUAhUUPjMCIXq
        gArbV+wX7gOx5SseoVA8QqF4hELxCIXiEQrFIxSKRygUj1AoHqFQPEKheIRC8QiF4hEKxSPubJKP3exi
        y1ckQqGCQjtCIRQCFRQ+M0KhgkI7QiEUAhUUPjNCoYJCO0IhFAIVFD4zQqE6oML2FfuF+0Bs+YpHKBSP
        UCgeoVA8QqF4hELxCIXiEQrFIxSKRygUj1AoHqFQPEKheIRC8Yg7m+RjN7vY8hWJUKig0I5QCIVABYXP
        jFCooNCOUAiFQAWFz4xQqKDQjlAIhUAFhc+MUKgOqLB9xX7hPhBbvuIRCsUjFIpHKBSPUCgeoVA8QqF4
        hELxCIXiEQrFIxSKRygUj1DIx+u+agWFfLwWu6oV7mxiY/yelDm2fEUr/EiSSkHhbn5/PmqFyQ+ldlMr
        KFQuCpPkr93UCgqVm8Ikyf6LFRRGEvFb0om/2mEeFErCa9KLP9XGtYJCtVBhclERFDri/b8C5+4tMTiE
        QgeM1R83XeSPMnDu4qHC5JRDoQu+3R6tIA6au9eRwqTIoZCPL90UVgFzp25jhYmCQja+9FNYhcvd1WAw
        OSnvx51EoQpfhjksg411E2OU3o87iTIVGk5HcaDcXc0Kz76Pu6rC9nXD/ULT6ei8SslWnGiEjz8hFaYa
        0rd8Y2NLqILk7jql8JR7Pe6TKcyNOcxC5C6+TSlMoJCO8TdzDkNcD/E6aTApfB43ei6FU6ejLEDurtMK
        z7nH40bPpXAyjZX33M30o21P6ue4cyhQoZpuB95zl88YTCp/x51DgQrfppPoPXcvcwpTf8edQ4EKZ05H
        qefcTQ2kmrjkERSScC6JvhXOnQqbk6GX486iPIWvc0n0rXDWYFJGUEjB61wSK7+5e5tXWERQSMH3uSSm
        fnN3nVeYRlBIwdkkXjZVqCf3Xo47i+IU5vNZ9Jus9/mDZ2IUtrHNfuHLfBZLrztzH4nlDwhbvgS09GWF
        12TdoHC5QltflgZKFhS6K7Q0hNOmCmMoZBVljIsKkyxzlFDIKsoYmQqTLHNUUMgqyhwqTLKg0LnSr1A4
        UysRCt/WUTgIfrKgcEOFg7WBVRViOAOFTvhsCuMtFSootOO2rRALbOIVYplbvELbZpMYhe3rJvuFVoXW
        ogYKc041sOW7gsIXm8J4Q4W48GIVhaVPhW9QuFzhdVOFlhXaCgrXUFh5VYhLgaUrjGYvyM+gcBWFhVeF
        s4fHbTHrKEy9Kpzd6yqgkILv2yrELaLLFX5sq3CuJ71AIQltC83tHe/eFM7MDPG4BBraDLZtwZtCPLTE
        v8LEs0I8OmhhpV+3Vji9QFMGczZAYQpf7AptqVyqcGJ2b+3AvaGwO5uudoWFpagl+4V1mA9bOf5GK2A3
        u7vf8o0/7ApTS1GLFRr/jO7PsoRCm0K7wftdFf4UGgelcUhnAxSlsJmVVRMD+9P1S4pPhYa5IR6vTsRm
        KPHn1KCmbNZuivmiFis0jGjO+JIDIv6uS/hHTSyzfeZR/Z/dynKF0XClFl81Qv/z1//TXZZxeqjqt97f
        7VPhwCG+8McFDaPCIqd9dg2Fkfrtq4S/1PpWWChT4bgrPVFLXkVhpPJ/2yZYKg9WWChU4XDL4kL+7DoK
        9YJH/vd/PzdxNkCpCvOBweAK94NSFfba4VlBoUSF6o+2zKzkfBYK96Pw8z9ef33/8V/M+ywU7khh9NhE
        4XwWCtXm39l0/wfHohbuF35VI//f99v3Hz9X+I0OteWr438/yom8v/77XzCFr/fRVHMmhkI65jp19UrM
        6KdaTqZsRa2jsLs89NfqVlgoTmHzx68dDn/auLk7nCxqFYX9BT7/X3Eyh9IU3vd5qnzw08f9v7YrydZQ
        ONwxPEGhQ+7KwU+7P5ktag2FyTAKKKQi4doZ24XxKyg03NgBhUQkXIOY2L7+arlC00X5Zyik4Y2kcP67
        k5YrvE3+3URQaMG3hBazX7yzWKG5K8hyKCTgO1Hh7PNfliqcujGmgkI75gk1Yo8Kp87H7dkQCmcwvpIV
        pv4UTn/LQgyFVoVkg/rE5E3h5EFTKIwcezBTVN4UTncFWS5HYRuh9wvfGQpP3vYLZ2oRc3+jw235Jpzw
        pnDmmCkUzuOVpbDwpHBuappB4TzeWAovkwca/CkwqzH7h1RC4RzmCS/iqaIGfwrMasyus6dQ6Pznb0rn
        RFHDcS2zGvMHhcI5vDEVtmuWo6KGzYhXDcvEpoDCaXxNuFEaixqVw6uGZWJzhsJpvLIVpsaivi1TaDso
        FLrnbhxNTzooSiWLFNofpQmFU/jGV9js/vSLMqyUs6phve7jAoVT+M1BYWpQmCxTaD9oDIXOuTNEPipq
        OKDMfv3gVINwQk6h0IwvTgqrYVGjDfczrxqE6+eyHAqN+O6kUF8U3CtqdEblKSQtEJUiFLav4fYL48Qt
        hkWNzqi8xxeSJjapyy+4CEVs+br1o/ViyUQ12jhzFBIXiKDQlLuPxC0GtzqMW9GJUw3iAlEFhQZMXKNf
        1PjnKacaxAWiFAqdc2eI3t0qhu6YdQk29aBQOEbXflSPODtFGU5lnGqQF4gKKByiez/au+HIoCDjVIPc
        F5yh0Dl3hki/inqf/am9GvSDQuEQuZu93bh8FWX4acyoBmNik0JhH/mbvd14fLWvoS1fONVgLLRfoLCP
        S/rRzrTB8LPK7VewBxS6524c9xGLoR/MONVgLRClUNhFl83ebrSX0NwWJpq10H6Bwi4u60fvo07THwKr
        GryDxlDonDtD6MJMNwWyxo3MP6R07wrbCLJf6LpJ8RXVxB9CyahGzFwgynJs+T5y57bZ2w3d2kwzipxR
        DfYCUQmFD4XJ8lDGRlhwqsE+Ibcbv1C4Rj+qe1KDAeNVplMY8xeIoPCeu3E/ys/mybREl3Kq4bBAVEFh
        g+Me8MLPZmKcUXCq4TCxSaFwKncpP5umhts+8ZJWjdhloR0Km9yNx/L2xRpSO2VdKui0QFRAoY7xWP5i
        H99khDncmVUNl7sB9KVXUGiazqWE0xLhLRXrV0icAgp1jM9BlBZRWt+RsZLluNBeQKGpHz1TLoUqrO/h
        3QXo1I/eL/Y/uMJxj1hQBof2zpaXrMQxoNDUj5LurkiV9Q2cZDkvEKVQOF4T+RxIElJ3se3PxqxkOS+0
        X3assH31vF9ouKm6ol0LZbmNRu9R9I+r5iJxjjg6+Jav8aZqUq9m6W6r4XGbr1JfP9KjKxyP5VPi7nk5
        u8tY71F0D7ToQtXEcqQjKxw/IUav/pMUFrN7VPUeRedAC27ZsEV5cIWjhOhnRZLGFunsTnF9av86ULz0
        +qrZihxaoWFxTREvzj+ZmvDjh03n+aUw8Rdzjwh/foWGTYpSEYeHn0PO6UWx4XPs17guYDKqIyscL65l
        OVVhkk+3reG3SaxwfdVMpPmBFRr60Yh8i0w+fYarpn9/H3FghYbGEUfkxa7PkeCE7NE3Ky27b8oa1YEV
        jpJx0UMD4uixiKYuOhs9H8HjeFTHCQq/oh6gUx86EU1d+pkHVpgcV+F4RFl/kxZx7KEVGi/AHt+Zve5o
        ZjyMLg6rcNQ4mrVp4kJK/WbTe0d3ZnNvlrDMS/8c/csJCu9R1D8lJrpenDR0kWe1UKHt0qrCcKnILhW2
        4XO/8GrKBH0GoN9s6Emr8YF4ClObQtNciJer6Fm2fIepqC9Eoc8A9KbuuIFl+VKFpU2haUUCCpvc1D8l
        L4ZVuqjRuwvDgVjDmcxmvDC8oYTCOpqfkmcA9dUxo243p/TY88VaFU70pFCYOikctLB0scLYrtBwI09+
        TIWDTrBRSF+Sbr61ZVBISTjQbFwUQeH4HVCoo1lqpM8AsrqomJBKzi3YKUXh+G+iPKbCwepMq5Ce7UZh
        r9Wec8vvTyiUoHBcyQIKk/syFVdh/9w5cXM9/XL7jKZw1NunETrSu0LGxlBVF9VrYhPzM/pNLylJ4Xgu
        c1CFxlbIuMWoufGlu/F7mppik8uMaQpHfQUUtqlRrEcwtfcudQYr5dRxqWPSesGaonDYNUNhmxqewnNT
        1Fc6220m03GJ49yY2ApHPSnOhW1qFOtGv/tNoPerFu9fSmc8LqnEIqcqHPb3aIVtahTvSfn3ohqHlq8V
        pNx32mSHonC0vrtDhe1rwF37ZkLAuffhXpRSf3z/8dNSZzX709///f6jRdviQn11yLCzYObqSS+8aBQy
        DHYuHYvr4mnHbeOuNG7i6802hYUu6gaFUwojjsLCR7JorXDwb2cofChkPXki3UShboWvpppAYa2QdffD
        eROFuhUOq1lC4UMha2sv20ShboXG3WoorBXynv+yiULdCgdvuUDhPTXc52NvolC3wsE/pVB4Tw330bzl
        FgpTKJxSWLdClkE/V8ITWuFw3FxB4T01vGmhp2+2JrRC42gGCutWyHwg4WkLhcV4qwkK76lh3xR/2UJh
        Ojpjn6Hwnhr+d0VsobAYnbFTKLynRobCdHTbx07vL2wj4H6h/lvm3sxZMitJQpvC8fJa5KMafexmd9db
        vtwnpRWbKBz2FTkU3lPDf6hkuonCwRuy4yocnFIKB4UnH7mz9OajBxKnaIWP1PC/WLv5PvTQrXD4DxEU
        NlG4PCLbh0JbKxwtrx1XoTGYx91C4Wh5baXjzuKeFQ4w7l+OZEEvubN1pN+gUALqmFI4Wl4LUSsodMEp
        hUOGwt3ihMJiyFC4W5xQ+H3A5fEUdk83u44JheMLuQ+n8PfvQiIhRXZAhY5fFbjXOO1WYfvqYb/wNXmq
        OOL3VDyZwgoKpUcOhdIDCqXHBQqlxyG/v/C5FBZQKD1KKJQeORQKjwwKpccZCqVHGkGh8KigUHpEUCg9
        8h0rbAP7hbNxISYnwpbvXiM9psJn6kiLYyp8plZYQqH0UFAoPQ6q8InOhdlBFT5RK4RC8QGF4uOoCnEu
        FK8QrRAK9xNQKD5wLhQf+1bYvmK/cC7aR3fxc4Ut370EFIqPoyp8puHMQRXmv4SExZ9+y0EVKikxoe7c
        NMD6LdGhFe4fJxSm+jl7aeBaQaETTii85CrAd04OEAqdcEJhEuuvGglcKyh0wimFqR5UpwoK5SrMdE96
        UVAoV2FS6a85iKFQsMKTXqpPoVCwwkR/J0oGhWIV3vR1+Fd9JffOFbbhYb9QDE4oLPTUMNffMBKyVt3s
        br7lKwYnFKYfemr4+X9QuHucUviip4af/1dB4c4xn1Ko9NQwfnwNLRTuFycVXnULfH8M26Bwtzip8HNW
        eMrfHt8eCoW7xUmF+psydU96DlgrKFRrngt1T1rE10dPGqJWUKhWbYV6mTt/fXyVdohaQaFaVaHeMIzj
        2/179UPUCgrVqgrrDcPoetgbtaXgzLkw+myBWb3IFqxWUKjWbYVRPTX86F3HBoX7wzmFuZ4avtQbv1C4
        X5xTqBdn9NQwDVUrB4XtK/YLxwrrn77oxZn3gz7YWQzOKqynhm/NM2UD1AoKnXBeob4CSm9X5FC4X5xX
        qKcUepENCsUqVJ9TCr3IVkDhftGisN63v+mvOQhQKyh0QotCfXNMXvekAWoFhU5oU6jXSHPdkwaoFRQ6
        oU2h3m2KP/TNav5rBYVOaFOobp/6Xr4uoYHC3aFVYX1J92PjFwr3h1aFqrlr+xKgVlDohHaFeq37rd2u
        gEKJCus10vjRkw6Kuv/DKrWCQie0K9Qz+88zYtb7rMr/venbn5Ifzb1Pq9QKdzY54ZTCzpv11PC1+ULf
        x2c/vt6axQpbvlsiQWE9oLklaf747OCKmwoKt0SKQj0evba/cf3Z4bsLKNwOc4rC+vKZ9stE9Wc/Rm8v
        1skGFCpPrbDuST/qjV+NV8P7q3yNWkGh8qVQD2heml85nhjExmvUCgqVL4W5HrLUG79RbGyE+ilDK9QK
        CpWnc6E++50+BzX6++3jyZlkHkHhfluh7kX19zZohdeJT9RdKRRugDSFqrn7Xt/x+zGlsGmji2oFhcqf
        wms9NcySuaigcMfnwnqBzfbU/0sOhVsgUaFeYNN3389GBYVbIFWhnhpeLQpPORRugFSFeoEttyhMNlDY
        vmK/cKxw+Ob4Wz01nI8CW74bIFWhvvPe2pNeoHADJCvUA5rEFvGiWkGhE9IVXhN7pPmSWkGhE9IVKoLC
        BArDI0PhO0FhsaRWUOiEDIUvBIXnfEGtoNAJV1bYDmjcagWFTshQSBnP6A9GUBgU11bYfOeoW62g0AkZ
        CkkdaXOdm1utoNAJGQpp309cD2jcagWFTshQmJMUJiqCwqDIUKhoCtMICoMiR+GNpFCvdbvVCnc2OeGU
        QtOb30kKkxJbvkGRo/BKU5hCYVDkaKANSXUv6FgrKHTAnKMwJiosoDAkshR+0BSeoTAkchRST4YJFIZE
        lkLqyTB1rBUUKs/nQvLJMHNMDhQq360wJs4Mm7VuKNyhwuiFqLDdvIfCEMhTSO1J2wENFAbAnKmQOK1o
        BzRQGAJ5CsnTimZAA4UhkKmQuOHUPu4LCkMgUyF5THp/SA2rVg4K21fsF44VTn2WOiZNHGqFLV8n5Cok
        96SFgsKdKvxGVHhRULhPhfkrUaF+EjQUhkC2wvhGVJhC4U4VkqeGCRTuVWFOVVhBYRDkKyQvsp2hMAjy
        FUb0qSEUhkAHheTtihQKQ6CLQurUMIPCEOigkHwJTfvVFlDoF10UkqeGp5xVKyh0QheF9KkhFAZAJ4Xk
        RTbeM0xwZ5MTTimc/yx1anjh1aqbXWz5UtFNIbknjVm1gkIVTCF51zBl1QoKHTB3VEidGiasWkGhCtcK
        yVPDilMrKFThFJJ70jOnVlCoAipk7BpCoVd0PRcq8tQwVVDoF10VkhfZMgWFftFVIX2RrYJCv+iskHz9
        RQqFXtH5XEi//iKBQr/o3nTI11+kUOgV3RWSr7+4QKFXXKCQvMgWU2vloLB9xX7hWCHhs+RFtpRYK2z5
        OuEChYo6NaTmCgqdcIlC8tSwoNUKCp1wiULy1PBMqxUUOuEShYoxNaTUCgqdcJFCck+akmoFhU64SCF5
        1zAj1QoKnXCZQvLUsKLUCgqdcJlC8tTwRKkVFDrhMoXknpT0DBModMKFCskDmlJB4T4V0i/NV1C4T4WK
        8fwLKPSDCxXmVyjcGpcqzDdW2Ab2C00ZJxZFfDTiKcKW714VEq+/SCMo3KtCBYXbYr5cIW1AU0ZQuNtW
        SJoa1s8vgUIvuFwhaWpYkYqCQrWNQkJP2nz1CBT6wBXOhZQBTUwrCgrVNq3Qfv1F+zA2KPSCE0kvOEXZ
        pobkL1KDQgeM11Bo60lLalFQqLZSOH/9xYlcFBSq9RRWrKLmr79QUOgTpxSWvKLmDBZQ6BWnbpmPeUXN
        TA0vyqvC9vXI+4UTe0U5r6iZRbaSXits+TrhdRWF03dt10+VJRYFhU5oVnhhKpx+/oVi1AoKndA8mDyx
        i5owWHFqBYVLf6NOpOyizOfU9pu1iUVB4dLfaNB4eEWZF9liVq2g0A2NKys5vyhTMUXOqhUUuqFpIHJx
        UHidKIZRKyh0RIPC1KEow9QwhsIwaJjSxS5FjdZ5CgWFYXDcAzYdILeoYTlnBYWhcKSwcCtqUEoJhcFw
        2HzaTXZ2Ue9QuBUqYyPkF/UChZsp7Of+PhVYkpxwCts48H5hg70u0Lmo+FUPSv+8F+ZQq252seXLw49e
        43EtKlaa374SBIUB8e4wK/PFJd+gcBOsO8HkL5UvL+oFCrfCvPmn5UU17RkKBWM90bxAoWTUg9I0gkLJ
        +Mf3f1z6ZCjcD8bN3BsKD4dQqKDQjlAIhUAFhc+MUKgOqLB9Pfh+4W4QW77iEQrFIxSKRygUj1AoHqFQ
        PEKheIRC8QiF4hEKxSMUikcoFI9QKB6hUDzizib52M0utnxFIhQqKLQjFEIhUEHhMyMUKii0IxRCIVBB
        4TMjFCootCMUQiFQQeEzIxSqAypsX7FfuA/Elq94hELxCIXiEQrFIxSKRygUj1AoHqFQPEKheIRC8QiF
        4hEKxSMUikcoFI+4s0k+drOLLV+RCIUKCu0IhVAIVFD4zAiFCgrtCIVQCFRQ+MwIhQoK7QiFUAhUUPjM
        CIXqgArbV+wX7gOx5SseoVA8QqF4hELxCIXiEQrFIxSKRygUj1AoHqFQPEKheIRC8QiF4hEKxSPubJKP
        3exiy1ckQqGCQjtCIRQCFRQ+M0KhgkI7QiEUAhUUPjNCoYJCO0IhFAIVFD4zQqE6oML2FfuF+0Bs+YpH
        KBSPUCgeoVA8QqF4hELxCIXyMYjC2+Mg5WET7Q1fH8nNPCr8eBylOmqi/eFbEIXvj6MUR020P3x5JPfi
        UeG3x1HSoybaH14fyT15VNg7yjET7Q977SOAwstRE+0N44/ACpODJtofxjcHhW0wtrW+zrjthiE2+dbD
        r9wWkbct387UJakOmmhv2M+tN4WdNaD0mIn2h9deDxdC4Sk/ZKL9YSiFX6fcDArXxX5q/Sn8Wp5J4kMm
        2h9+ZfbsU2FnBUEPm5D39fClP8zwp/Cl/7cCDWth/K3fOPwpzJPeSRca1sJOP1qfovwp7B6piqBhNXxb
        0jZ4Cj86XXYODWthd0px8auwO55JoHA9hUl/NONT4Vu/J4WGdbCbVv5Qn3ngpNfioWEV7M63E/6aCfPA
        t87BSmhYBztL3Lxlr/aVta3V3TJMTtjzWwe7SU0Zn3U7cGdy/zmDgYY1sDvbbi8s86mwezJsVmiOkmh/
        +K2bU85nHRV+JL2z4XES7Q27Z0LeRUmOB+7220mmDpNof9hrFKyrOx0P3Ou4251faFiAvTaRxJzPOh64
        35MmRX7IvK+G8VvS79Y4RbkeuP9Xk5R5BCvOGL/2s5myinI9sErGDp880d5waPB+059nhb3VoNqhghU3
        HBk856yinA/8Njhu8qd66kT7wlj9NsxkxSvK/W/nNjxyhjtG2ajU2yiPSR5I4XBAU0v88XcMSXTM//53
        LFBvFbKKcq+HShBeQgVTGF8ThIfQl7LwFLbhssuVIDwE14JaohDN0EOkQRWiGXoIFVbhS4JYOYrACgeL
        3YjFcVGBFQ72nBCLIw6uMEZXumoUKrjCCF3pmtF2o2EVRvktQawVcbyFwtFOCcI5ynwThcNrBhDOUS27
        tWHBh+Fwnfg0uJVCOFwlqjzaTmEUY0yzNLIyjzZV2H3MLMIhzu3OkZuF9nXhTrTp+gEEMbL2AdmOFla7
        DEv9AYlOkf2j8mgPCut2/frr++2W3ev2+V/6f8BJzL7/+tmkbx8KO1dlIciRL087riQTj0iHeEQ6xCPS
        IR6RDvGIdIhHpEM8Ih3iEekQj0iHeEQ6xOM9Fu4XAjdHpEM8Ih3iEekQj0iHeEQ6xCPSIR6RDvGIdIhH
        pEM8Ih3iEekQj0iHeEQ6xCPSIRjbV+y9iUWkQzwiHeIR6RCPSId4RDrEI9IhHpEO8Yh0iEekQzwiHeIR
        6RCPSId4RDrEI9IhHu+BvTfpiHSIR6RDPCId4hHpEI9Ih3hEOsQj0iEekQ7xiHSIR6RDPCId4hHpEI9I
        h3hEOgRj+4q9N7GIdIhHpEM8Ih3iEekQj0iHeEQ6xCPSIR6RDvGIdIhHpEM8Ih3iEekQj0iHeEQ6xOM9
        sPcmHZEO8Yh0iEekQzwiHeIR6RCPSId4RDrEI9IhHpEO8Yh0iEekQzwiHeIR6RCPSIdUVOr/AcnZLtZ+
        WNXuAAAAAElFTkSuQmCC
</value>
  </data>
</root>